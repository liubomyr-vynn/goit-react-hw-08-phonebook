{"version":3,"file":"static/js/236.94c7d202.chunk.js","mappings":"uRAmFA,EA9E4B,WAC1B,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAmCA,OACE,UAACC,EAAA,EAAD,CACEC,UAAU,OACVC,YAAU,EACVC,aAAa,MACbC,SAtCiB,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAETC,EAAO,IAAIC,SAASL,EAAEG,eAEtBG,EAAO,CACXC,KAAMH,EAAKI,IAAI,QACfC,MAAOL,EAAKI,IAAI,SAChBE,SAAUN,EAAKI,IAAI,aAGjBf,IAIJH,GAASqB,EAAAA,EAAAA,IAASL,IAClBJ,EAAKU,QACN,EAqBGC,GAAI,CACF,uBAAwB,CAAEC,EAAG,EAAGC,MAAO,QACvCC,QAAS,OACTC,cAAe,SACfC,WAAY,UAThB,WAYE,SAACC,EAAA,EAAD,CAAWC,GAAG,OAAOC,MAAM,OAAOC,QAAQ,WAAWf,KAAK,UAE1D,SAACY,EAAA,EAAD,CACEC,GAAG,QACHC,MAAM,QACNC,QAAQ,WACRC,KAAK,QACLhB,KAAK,WAGP,SAACY,EAAA,EAAD,CACEC,GAAG,WACHC,MAAM,WACNC,QAAQ,WACRC,KAAK,WACLhB,KAAK,WACLiB,SA1CuB,SAAAC,GAC3B,IAAQC,EAAUD,EAAME,OAAhBD,MAEN,qEACWE,KAAKF,GAKhBhC,EAAiB,IAJjBA,EACE,gIAKL,EAgCKmC,QAASpC,EACTqC,WAAYrC,KAGd,SAACsC,EAAA,EAAD,CAAQT,QAAQ,YAAYC,KAAK,SAAjC,wBAKL,ECvED,EAPiB,WACf,OACE,SAACS,EAAA,EAAD,WACE,SAAC,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { Box, Button, TextField } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [passwordError, setPasswordError] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    const data = new FormData(e.currentTarget);\n\n    const user = {\n      name: data.get('name'),\n      email: data.get('email'),\n      password: data.get('password'),\n    };\n\n    if (passwordError) {\n      return;\n    }\n\n    dispatch(register(user));\n    form.reset();\n  };\n\n  const handlePasswordChange = event => {\n    const { value } = event.target;\n    const pattern =\n      /(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{9,}/;\n    if (!pattern.test(value)) {\n      setPasswordError(\n        'Password must contain at least 9 characters, including uppercase letters, lowercase letters, numbers, and special characters.'\n      );\n    } else {\n      setPasswordError('');\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <TextField id=\"name\" label=\"Name\" variant=\"outlined\" name=\"name\" />\n\n      <TextField\n        id=\"email\"\n        label=\"Email\"\n        variant=\"outlined\"\n        type=\"email\"\n        name=\"email\"\n      />\n\n      <TextField\n        id=\"password\"\n        label=\"Password\"\n        variant=\"outlined\"\n        type=\"password\"\n        name=\"password\"\n        onChange={handlePasswordChange}\n        error={!!passwordError}\n        helperText={passwordError}\n      />\n\n      <Button variant=\"contained\" type=\"submit\">\n        Register\n      </Button>\n    </Box>\n  );\n};\n\nexport default RegisterForm;\n","import { Container } from '@mui/material';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <Container>\n      <RegisterForm />\n    </Container>\n  );\n};\nexport default Register;\n"],"names":["dispatch","useDispatch","useState","passwordError","setPasswordError","Box","component","noValidate","autoComplete","onSubmit","e","preventDefault","form","currentTarget","data","FormData","user","name","get","email","password","register","reset","sx","m","width","display","flexDirection","alignItems","TextField","id","label","variant","type","onChange","event","value","target","test","error","helperText","Button","Container"],"sourceRoot":""}